---
title: Amazon S3でIPアドレスによるアクセス制限をかける方法
date: 2014-07-18 23:14 JST
tags: aws, s3
gravatar: ykuoka@gmail.com
author: Yusuke Kuoka
twitter_id: mumoshu
---

Amazon S3のBucketにHTTPでアクセスできるのは常識かもしれませんが、
それにアクセス制限をかけられる、ということはご存知でしたか？

Bucketには「Static Website Hosting」の機能のオンオフにかかわらず、HTTPでアクセスできます。
しかし、初期状態ではリクエストに認証情報を含めておかないとアクセスできません。403 FORBIDDENです。
ブラウザからアクセスしてWebサイトとして利用したい場合に、いちいちリクエストの認証情報を計算・付与するのは面倒です。
用途によっては、もっと緩いアクセス制限をかけたいところです。

その方法の一つとして、この記事では「Amazon S3のBucketにIPアドレスによるアクセス制限をかける」方法をご紹介します。
IPアドレスによるアクセス制限はさほどセキュアなものではありませんが、秘密情報を含まないページのテストなどには有用です。
たとえば、「テスト中のWebサイトの新デザインを共有したいが、今の段階ではお目汚しになるかもしれないのでユーザさんにお見せしたくない」といったレベルのゆるいアクセス制限がほしいケースです。

IPアドレスによるアクセス制限は、AWS Consoleから簡単にかけられます。

READMORE

## 初期状態

### デフォルトではオーナーだけがアクセス可能

Amazon S3のBucketに保存されたオブジェクトには、以下のようなURLでアクセスできます。

```
$ curl https://s3-ap-northeast-1.amazonaws.com/<bucket-name>/<object-name>
```

認証情報を含まないHTTP GETリクエストを送ってみると、以下のように403 FORBIDDENです。

```
$ curl https://s3-ap-northeast-1.amazonaws.com/<bucket-name>/<object-name> -w "\n\nStatus: %{http_code}\n"
<?xml version="1.0" encoding="UTF-8"?>
<Error><Code>AccessDenied</Code><Message>Access Denied</Message><RequestId>9BC0BE23385EBA9F</RequestId><HostId>wMa4ISfdmJkRtWepZUiPIuSH8A3NebIqfR0jjFAwhN1svtT4FF72/DdPKED+rdgm</HostId></Error>

Status: 403
```

Amazon S3でBucketを作成すると、初期状態ではAWSアカウントとBucket、それぞれのオーナーに対してのみアクセス許可がなされています。
セキュアでいいですね。
しかし、用途によってはもっと緩いアクセス制限にしたい、というのがこの記事の趣旨です。

そのままだと、アクセスキーID・シークレットなどを使った認証情報を計算してHTTPリクエストに付与する必要があります。
静的ページをちょっとS3で共有してみんなでテスト、みたいなことはできません。
そこでIPアドレスによるアクセス制限に変更します。

## おすすめ: Everyoneのアクセス拒否

アクセス制限はホワイトリスト方式をおすすめします。
誤設定で情報が「全公開」になってしまうリスクが抑えられるからです。
そのために、まずはデフォルトのアクセス権限が「全公開」になっていないかダブルチェックしておきましょう。

### ブラックリストからホワイトリスト方式への変更例

例えば、以下のようにEveryoneユーザへのOpen/Download権限がついていると、
認証不要でだれでもHTTP GETでアクセスできてしまいます。
「全公開」です。

<%= image_tag 's3-remove-everyones-permission.png' %>

この状態からアクセス制限をかけようとすると、結果的にブラックリスト方式になります。
デフォルトで「全公開」で、設定によって「特定の（＝ブラックリストに入れた）IPアドレスはアクセス拒否」になる、ということです。
これだと、設定が漏れたり、オペミスでアクセス制限を解除した場合に直ちに情報漏洩になってしまいます。
（今回はそもそも機密情報を含まないものに使うので、深刻なものではないですが。）

漏洩のリスクを減らすために、EveryoneユーザへのOpen/Download権限は削除しておきましょう。
IAMロールなどを使っている場合、そちらでもブラックリスト方式になってしないか確認しておいたほうがよいのですが、
ここでは省略します。

## IPアドレスレベルのアクセス制限の設定

### バケットポリシーを書く

BucketにIPアドレスによるアクセス制限をつけます。
「Add bucket policy」をクリックして、開いたダイアログに以下のJSONを入力して、Saveをクリックします。
JSON中の`<UNIQUE_ID>`と`<IP/CIDR>`はそれぞれユニークなIDと`IPアドレス/32`のような`IPアドレス/CIDRブロック`に変更してください。

<script src="https://gist.github.com/mumoshu/15a5a15a7d3c44ec8530.js"></script>

* `/Statement/Condition/IpAddress/aws:SourceIp` はアクセス許可（ホワイトリスト）
* `/Statement/Condition/NotIpAddress/aws:SourceIp` はアクセス拒否（ブラックリスト）

です。

なお、この設定は念のため保守的にしています。
デフォルトが拒否・許可にかかわらず、指定したIPアドレス/CDIRブロック内ならアクセス許可、それ以外なら拒否です。

前述のとおり「デフォルトで拒否」していれば、
バケットポリシーでは「許可するIPアドレス/CIDRブロックのリスト（＝ホワイトリスト）」を設定するだけでOKです。

もしくは「デフォルトで許可」していれば、
バケットポリシーでは「拒否するIPアドレス/CIDRブロックのリスト（＝ブラックリスト）」を設定するだけでOKです。

しかし、ここでカバーしていない設定で「デフォルト許可」や「デフォルト拒否」にできてしまい、その場合に
動かないバケットポリシーだと皆さんにご迷惑がかかりそうなので、念のためバケットポリシーは保守的にしておきます。

## 確認

### curlやブラウザで認証情報なしでアクセスしてみる

以下のように認証情報なしでHTTP GETしたとき、アクセス許可されているIPアドレスからなら200 OK、それ以外なら403 FORBIDDENになれば成功です。
ブラウザのロケーションバーに入力した場合も同様です。

```
$ curl https://s3-ap-northeast-1.amazonaws.com/<bucket-name>/<object-name>`
```

## まとめ

この記事では、Amazon S3のBucketにIPアドレスによるアクセス制限をかける方法を説明しました。
ゆるいアクセス制限が必要な場合におすすめです。

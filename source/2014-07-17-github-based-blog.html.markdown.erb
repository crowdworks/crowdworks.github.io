---
title: GitHubベースで手間のかからないブログ運用
date: 2014-07-17 18:20 JST
tags:
author: Yusuke KUOKA
gravatar: ykuoka@gmail.com
github_user: mumoshu
---

こんにちは、クラウドワークスの九岡です。

このブログはGitHubとMiddleman、その他にHaml・SCSS・Markdownなどを使って執筆・運営されています。

READMORE

<%= image_tag 'middleman.svg', class: "article__body__image_left_30" %>
## Middleman
静的サイトジェネレータ。middleman-blogというプラグインを使うことで、ブログを運用することもできます。
これが大変便利で、記事の執筆をHamlやらMarkdownやら、Middlemanが対応しているあらゆるフォーマットで行うことができつつ、
公開に伴う承認フローをGitHubのプルリクエストで回すことができます。記事の取り下げも最近GitHubに追加されたプルリクエストのRevert機能で一発です。

<div style="clear: both;"/>

## ワークフロー

* git cloneする
* `bundle exec middleman`でテストサーバを起動する
* ブラウザで[http://localhost:4567/](http://localhost:4567/)にアクセスする
* `bundle exec middleman article 英語タイトル`で新規記事を作成する
  * 九岡はAtomの[Run Commandパッケージ](https://github.com/kylewlacy/run-command)を使って、Atom内で完結させています
* ブラウザ上で記事ページを開く(新規記事はMiddlemanが自動的にロードしてくれています！)
* 記事を変更するとブラウザ上でも変更点が自動的にリロードされる
* 書き終わったらgit push・hub pull-request
* マージされたらWerckerで自動的に公開

<% dot do %>
  digraph {
      A [label="GitHubからソースをclone"];
      B [label="middleman article <タイトル>"]
      C [label="記事ソース編集"]
      D [label="ブラウザで表示確認"];
      E [label="GitHubへpush"];
      F [label="レビュー"]
      G [label="マージ"]
      H [label="公開"]
      A -> B -> C;
      D -> C;
      C -> D [label="middleman serverで自動リロード"];
      D -> E;
      E -> F [label="Werckerで自動デプロイ"]
      F -> C;
      F -> G;
      G -> H [label="WerckerでGitHub Pagesへ自動デプロイ"];
  }
<% end %>

## ビルド

```bash
$ MIDDLEMAN_SYNC_BUCKET_NAME=<Bucket> \
  MIDDLEMAN_SYNC_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
  MIDDLEMAN_SYNC_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
  bundle exec middleman build
```

## Amazon S3へのデプロイ

```bash
$ MIDDLEMAN_SYNC_BUCKET_NAME=<Bucket名> \
  MIDDLEMAN_SYNC_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
  MIDDLEMAN_SYNC_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
  bundle exec middleman sync
```
